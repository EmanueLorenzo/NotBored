// Generated by view binder compiler. Do not edit!
package com.emanuel.notbored.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emanuel.notbored.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final Button btnTry;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView tvActivityTitle;

  @NonNull
  public final TextView tvInfo;

  @NonNull
  public final TextView tvParticipant;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvRandom;

  private ActivityDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnBack,
      @NonNull Button btnTry, @NonNull ConstraintLayout linearLayout, @NonNull TextView textView2,
      @NonNull TextView textView5, @NonNull TextView tvActivityTitle, @NonNull TextView tvInfo,
      @NonNull TextView tvParticipant, @NonNull TextView tvPrice, @NonNull TextView tvRandom) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnTry = btnTry;
    this.linearLayout = linearLayout;
    this.textView2 = textView2;
    this.textView5 = textView5;
    this.tvActivityTitle = tvActivityTitle;
    this.tvInfo = tvInfo;
    this.tvParticipant = tvParticipant;
    this.tvPrice = tvPrice;
    this.tvRandom = tvRandom;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnTry;
      Button btnTry = ViewBindings.findChildViewById(rootView, id);
      if (btnTry == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.tvActivityTitle;
      TextView tvActivityTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvActivityTitle == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      id = R.id.tvParticipant;
      TextView tvParticipant = ViewBindings.findChildViewById(rootView, id);
      if (tvParticipant == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvRandom;
      TextView tvRandom = ViewBindings.findChildViewById(rootView, id);
      if (tvRandom == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((ConstraintLayout) rootView, btnBack, btnTry, linearLayout,
          textView2, textView5, tvActivityTitle, tvInfo, tvParticipant, tvPrice, tvRandom);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
